{"ast":null,"code":"import React,{useEffect,useRef}from'react';import styled,{keyframes}from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TrackContainer=styled.div`\n  width: 100%;\n  height: 160px; // Increased height to accommodate two lanes\n  background: linear-gradient(to bottom, #87CEEB, #4682B4);\n  border-radius: 60px;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 30px;\n  border: 4px solid #333;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\n`;const cloudFloat=keyframes`\n  0% {\n    transform: translateX(0);\n  }\n  100% {\n    transform: translateX(-100%);\n  }\n`;const Clouds=styled.div`\n  position: absolute;\n  top: 10px;\n  width: 200%;\n  height: 20px;\n  background: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 120'%3E%3Cpath fill='%23fff' d='M0 0h1000v120H0z'/%3E%3Ccircle fill='%23fff' cx='100' cy='70' r='30'/%3E%3Ccircle fill='%23fff' cx='160' cy='70' r='40'/%3E%3Ccircle fill='%23fff' cx='220' cy='70' r='25'/%3E%3Ccircle fill='%23fff' cx='350' cy='70' r='35'/%3E%3Ccircle fill='%23fff' cx='420' cy='70' r='30'/%3E%3Ccircle fill='%23fff' cx='500' cy='70' r='40'/%3E%3Ccircle fill='%23fff' cx='580' cy='70' r='25'/%3E%3Ccircle fill='%23fff' cx='650' cy='70' r='35'/%3E%3Ccircle fill='%23fff' cx='720' cy='70' r='30'/%3E%3Ccircle fill='%23fff' cx='800' cy='70' r='40'/%3E%3Ccircle fill='%23fff' cx='880' cy='70' r='25'/%3E%3Ccircle fill='%23fff' cx='950' cy='70' r='35'/%3E%3C/svg%3E\") repeat-x;\n  opacity: 0.7;\n  z-index: 1;\n  animation: ${cloudFloat} 60s linear infinite;\n`;const TrackRoad=styled.div`\n  width: 100%;\n  height: 100px; // Increased height for two lanes\n  background: linear-gradient(to bottom, #555, #333);\n  position: absolute;\n  top: 60%;\n  transform: translateY(-50%);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    height: 6px;\n    width: 100%;\n    background: repeating-linear-gradient(\n      to right,\n      #fff,\n      #fff 30px,\n      transparent 30px,\n      transparent 60px\n    );\n    top: 25%; // Top lane center\n    transform: translateY(-50%);\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    height: 6px;\n    width: 100%;\n    background: repeating-linear-gradient(\n      to right,\n      #fff,\n      #fff 30px,\n      transparent 30px,\n      transparent 60px\n    );\n    top: 75%; // Bottom lane center\n    transform: translateY(-50%);\n  }\n`;const LaneDivider=styled.div`\n  position: absolute;\n  width: 100%;\n  height: 4px;\n  background: repeating-linear-gradient(\n    to right,\n    #ffeb3b,\n    #ffeb3b 20px,\n    transparent 20px,\n    transparent 40px\n  );\n  top: 60%;\n  transform: translateY(-50%);\n  z-index: 2;\n  opacity: 0.8;\n`;const finishLinePulse=keyframes`\n  0%, 100% {\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n  }\n  50% {\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.8);\n  }\n`;const FinishLine=styled.div`\n  position: absolute;\n  right: 20px;\n  height: 120px; // Increased height for two lanes\n  width: 14px;\n  background: repeating-linear-gradient(\n    to bottom,\n    black,\n    black 10px,\n    white 10px,\n    white 20px\n  );\n  top: 60%;\n  transform: translateY(-50%);\n  z-index: 3;\n  animation: ${finishLinePulse} 2s infinite;\n  \n  &::after {\n    content: '🏁';\n    position: absolute;\n    font-size: 20px;\n    right: -25px;\n    top: -25px;\n  }\n`;const StartLine=styled.div`\n  position: absolute;\n  left: 20px;\n  height: 120px; // Increased height for two lanes\n  width: 14px;\n  background: repeating-linear-gradient(\n    to bottom,\n    white,\n    white 10px,\n    green 10px,\n    green 20px\n  );\n  top: 60%;\n  transform: translateY(-50%);\n  z-index: 3;\n  \n  &::after {\n    content: '🏁';\n    position: absolute;\n    font-size: 20px;\n    left: -25px;\n    top: -25px;\n    transform: scaleX(-1);\n  }\n`;const carBounce=keyframes`\n  0%, 100% {\n    transform: translateY(-50%);\n  }\n  50% {\n    transform: translateY(-53%);\n  }\n`;const wheelSpin=keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;const Car=styled.div`\n  width: 80px;\n  height: 40px;\n  position: absolute;\n  top: ${props=>props.isTopLane?'45%':'75%'};\n  transform: translateY(-50%);\n  left: ${props=>Math.max(5,Math.min(90,props.position))}%;\n  transition: left 0.3s ease-out;\n  z-index: 4;\n  animation: ${carBounce} 0.6s ease-in-out infinite;\n  opacity: ${props=>props.isShadow?0.6:1};\n  filter: ${props=>props.isShadow?'grayscale(70%)':'none'};\n  \n  &::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: ${props=>props.isShadow?'linear-gradient(to bottom, #777, #555)':'linear-gradient(to bottom, #e74c3c, #c0392b)'};\n    border-radius: 12px;\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.4);\n  }\n  \n  /* Car windows */\n  &::after {\n    content: '';\n    position: absolute;\n    width: 30px;\n    height: 22px;\n    background: ${props=>props.isShadow?'linear-gradient(135deg, #999, #777)':'linear-gradient(135deg, #3498db, #2980b9)'};\n    border-radius: 6px;\n    top: 4px;\n    left: 12px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;const Wheel=styled.div`\n  width: 16px;\n  height: 16px;\n  background-color: #333;\n  border-radius: 50%;\n  position: absolute;\n  bottom: -7px;\n  left: ${props=>props.left}px;\n  border: 3px solid #222;\n  animation: ${wheelSpin} 0.5s linear infinite;\n  transform-origin: center center;\n  \n  /* Wheel cap */\n  &::after {\n    content: '';\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    background-color: #aaa;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;const headlightFlash=keyframes`\n  0%, 100% {\n    opacity: 0.7;\n    box-shadow: 0 0 10px 3px rgba(255, 235, 59, 0.7);\n  }\n  50% {\n    opacity: 1;\n    box-shadow: 0 0 15px 5px rgba(255, 235, 59, 0.9);\n  }\n`;const Headlight=styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: #ffeb3b;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 14px;\n  left: ${props=>props.left}px;\n  box-shadow: 0 0 10px 3px rgba(255, 235, 59, 0.7);\n  z-index: 5;\n  animation: ${headlightFlash} 1s infinite;\n`;const Exhaust=styled.div`\n  position: absolute;\n  width: 6px;\n  height: 4px;\n  background-color: #333;\n  border-radius: 2px;\n  bottom: 8px;\n  left: 5px;\n  z-index: 3;\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 12px;\n    height: 8px;\n    background: linear-gradient(to left, rgba(100, 100, 100, 0.8), transparent);\n    left: -12px;\n    top: -2px;\n    border-radius: 4px;\n  }\n`;const MileMarker=styled.div`\n  position: absolute;\n  top: 25%;\n  bottom: 25%;\n  width: 3px;\n  background-color: rgba(255, 255, 255, 0.5);\n  left: ${props=>props.position}%;\n  z-index: 2;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: -4px;\n    width: 12px;\n    height: 12px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-radius: 50%;\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);\n  }\n  \n  &::before {\n    content: '${props=>props.position}%';\n    position: absolute;\n    top: -20px;\n    left: -10px;\n    color: white;\n    font-weight: bold;\n    font-size: 12px;\n    text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);\n  }\n`;const YouLabel=styled.div`\n  position: absolute;\n  top: 30%;\n  left: 40px;\n  color: white;\n  font-weight: bold;\n  font-size: 14px;\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8);\n  background-color: rgba(231, 76, 60, 0.7);\n  padding: 3px 8px;\n  border-radius: 10px;\n  z-index: 10;\n`;const PreviousBestLabel=styled.div`\n  position: absolute;\n  top: 80%;\n  left: 40px;\n  color: white;\n  font-weight: bold;\n  font-size: 14px;\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8);\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 3px 8px;\n  border-radius: 10px;\n  z-index: 10;\n`;const RaceTrack=_ref=>{let{position,previousBestPosition=0}=_ref;// Use ref to track previous position to prevent backward movement\nconst prevPositionRef=useRef(0);const displayPositionRef=useRef(0);// Use a smaller value to make car movement more gradual\nconst speedFactor=0.15;// Reduced from 0.25 to make movement even smoother\nuseEffect(()=>{// Track animation frame to allow cancellation\nlet animationFrameId;// Animation function for smooth car movement\nconst animatePosition=()=>{// Calculate the new position with easing\nconst targetPosition=Math.max(5,Math.min(90,position));const currentPosition=displayPositionRef.current;const distance=targetPosition-currentPosition;// Only update if there's a significant distance to travel\nif(Math.abs(distance)>0.1){// Move a percentage of the remaining distance for smooth easing\nconst newPosition=currentPosition+distance*speedFactor;displayPositionRef.current=newPosition;prevPositionRef.current=newPosition;// Continue animation\nanimationFrameId=requestAnimationFrame(animatePosition);}else if(distance!==0){// Final step - snap to target position\ndisplayPositionRef.current=targetPosition;prevPositionRef.current=targetPosition;}};// Start animation\nanimationFrameId=requestAnimationFrame(animatePosition);// Cleanup animation on unmount or when position changes\nreturn()=>{if(animationFrameId){cancelAnimationFrame(animationFrameId);}};},[position,speedFactor]);// Use the current display position for rendering\nconst carPosition=displayPositionRef.current;// Previous best position\nconst shadowPosition=previousBestPosition<5?5:previousBestPosition;// Calculate position for mile markers\nconst mileMarkers=[25,50,75];return/*#__PURE__*/_jsxs(TrackContainer,{children:[/*#__PURE__*/_jsx(Clouds,{}),/*#__PURE__*/_jsx(TrackRoad,{}),/*#__PURE__*/_jsx(LaneDivider,{}),/*#__PURE__*/_jsx(StartLine,{}),mileMarkers.map((markerPos,index)=>/*#__PURE__*/_jsx(MileMarker,{position:markerPos},index)),/*#__PURE__*/_jsx(FinishLine,{}),/*#__PURE__*/_jsx(YouLabel,{children:\"You\"}),/*#__PURE__*/_jsxs(Car,{position:carPosition,isTopLane:true,children:[/*#__PURE__*/_jsx(Wheel,{left:18}),/*#__PURE__*/_jsx(Wheel,{left:55,isRear:true}),/*#__PURE__*/_jsx(Headlight,{left:78}),/*#__PURE__*/_jsx(Headlight,{left:78}),/*#__PURE__*/_jsx(Exhaust,{})]}),/*#__PURE__*/_jsx(PreviousBestLabel,{children:\"Best\"}),/*#__PURE__*/_jsxs(Car,{position:shadowPosition,isTopLane:false,isShadow:true,children:[/*#__PURE__*/_jsx(Wheel,{left:18}),/*#__PURE__*/_jsx(Wheel,{left:55,isRear:true})]})]});};export default RaceTrack;","map":{"version":3,"names":["React","useEffect","useRef","styled","keyframes","jsx","_jsx","jsxs","_jsxs","TrackContainer","div","cloudFloat","Clouds","TrackRoad","LaneDivider","finishLinePulse","FinishLine","StartLine","carBounce","wheelSpin","Car","props","isTopLane","Math","max","min","position","isShadow","Wheel","left","headlightFlash","Headlight","Exhaust","MileMarker","YouLabel","PreviousBestLabel","RaceTrack","_ref","previousBestPosition","prevPositionRef","displayPositionRef","speedFactor","animationFrameId","animatePosition","targetPosition","currentPosition","current","distance","abs","newPosition","requestAnimationFrame","cancelAnimationFrame","carPosition","shadowPosition","mileMarkers","children","map","markerPos","index","isRear"],"sources":["/Users/ericwang/Theseus/typing-racer/src/components/RaceTrack.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\ninterface RaceTrackProps {\n  position: number; // 0-100 percentage\n  previousBestPosition?: number; // Previous best score position\n}\n\nconst TrackContainer = styled.div`\n  width: 100%;\n  height: 160px; // Increased height to accommodate two lanes\n  background: linear-gradient(to bottom, #87CEEB, #4682B4);\n  border-radius: 60px;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 30px;\n  border: 4px solid #333;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\n`;\n\nconst cloudFloat = keyframes`\n  0% {\n    transform: translateX(0);\n  }\n  100% {\n    transform: translateX(-100%);\n  }\n`;\n\nconst Clouds = styled.div`\n  position: absolute;\n  top: 10px;\n  width: 200%;\n  height: 20px;\n  background: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 120'%3E%3Cpath fill='%23fff' d='M0 0h1000v120H0z'/%3E%3Ccircle fill='%23fff' cx='100' cy='70' r='30'/%3E%3Ccircle fill='%23fff' cx='160' cy='70' r='40'/%3E%3Ccircle fill='%23fff' cx='220' cy='70' r='25'/%3E%3Ccircle fill='%23fff' cx='350' cy='70' r='35'/%3E%3Ccircle fill='%23fff' cx='420' cy='70' r='30'/%3E%3Ccircle fill='%23fff' cx='500' cy='70' r='40'/%3E%3Ccircle fill='%23fff' cx='580' cy='70' r='25'/%3E%3Ccircle fill='%23fff' cx='650' cy='70' r='35'/%3E%3Ccircle fill='%23fff' cx='720' cy='70' r='30'/%3E%3Ccircle fill='%23fff' cx='800' cy='70' r='40'/%3E%3Ccircle fill='%23fff' cx='880' cy='70' r='25'/%3E%3Ccircle fill='%23fff' cx='950' cy='70' r='35'/%3E%3C/svg%3E\") repeat-x;\n  opacity: 0.7;\n  z-index: 1;\n  animation: ${cloudFloat} 60s linear infinite;\n`;\n\nconst TrackRoad = styled.div`\n  width: 100%;\n  height: 100px; // Increased height for two lanes\n  background: linear-gradient(to bottom, #555, #333);\n  position: absolute;\n  top: 60%;\n  transform: translateY(-50%);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    height: 6px;\n    width: 100%;\n    background: repeating-linear-gradient(\n      to right,\n      #fff,\n      #fff 30px,\n      transparent 30px,\n      transparent 60px\n    );\n    top: 25%; // Top lane center\n    transform: translateY(-50%);\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    height: 6px;\n    width: 100%;\n    background: repeating-linear-gradient(\n      to right,\n      #fff,\n      #fff 30px,\n      transparent 30px,\n      transparent 60px\n    );\n    top: 75%; // Bottom lane center\n    transform: translateY(-50%);\n  }\n`;\n\nconst LaneDivider = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 4px;\n  background: repeating-linear-gradient(\n    to right,\n    #ffeb3b,\n    #ffeb3b 20px,\n    transparent 20px,\n    transparent 40px\n  );\n  top: 60%;\n  transform: translateY(-50%);\n  z-index: 2;\n  opacity: 0.8;\n`;\n\nconst finishLinePulse = keyframes`\n  0%, 100% {\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n  }\n  50% {\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.8);\n  }\n`;\n\nconst FinishLine = styled.div`\n  position: absolute;\n  right: 20px;\n  height: 120px; // Increased height for two lanes\n  width: 14px;\n  background: repeating-linear-gradient(\n    to bottom,\n    black,\n    black 10px,\n    white 10px,\n    white 20px\n  );\n  top: 60%;\n  transform: translateY(-50%);\n  z-index: 3;\n  animation: ${finishLinePulse} 2s infinite;\n  \n  &::after {\n    content: '🏁';\n    position: absolute;\n    font-size: 20px;\n    right: -25px;\n    top: -25px;\n  }\n`;\n\nconst StartLine = styled.div`\n  position: absolute;\n  left: 20px;\n  height: 120px; // Increased height for two lanes\n  width: 14px;\n  background: repeating-linear-gradient(\n    to bottom,\n    white,\n    white 10px,\n    green 10px,\n    green 20px\n  );\n  top: 60%;\n  transform: translateY(-50%);\n  z-index: 3;\n  \n  &::after {\n    content: '🏁';\n    position: absolute;\n    font-size: 20px;\n    left: -25px;\n    top: -25px;\n    transform: scaleX(-1);\n  }\n`;\n\nconst carBounce = keyframes`\n  0%, 100% {\n    transform: translateY(-50%);\n  }\n  50% {\n    transform: translateY(-53%);\n  }\n`;\n\nconst wheelSpin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Car = styled.div<{ position: number; isTopLane?: boolean; isShadow?: boolean }>`\n  width: 80px;\n  height: 40px;\n  position: absolute;\n  top: ${props => props.isTopLane ? '45%' : '75%'};\n  transform: translateY(-50%);\n  left: ${props => Math.max(5, Math.min(90, props.position))}%;\n  transition: left 0.3s ease-out;\n  z-index: 4;\n  animation: ${carBounce} 0.6s ease-in-out infinite;\n  opacity: ${props => props.isShadow ? 0.6 : 1};\n  filter: ${props => props.isShadow ? 'grayscale(70%)' : 'none'};\n  \n  &::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: ${props => props.isShadow \n      ? 'linear-gradient(to bottom, #777, #555)'\n      : 'linear-gradient(to bottom, #e74c3c, #c0392b)'};\n    border-radius: 12px;\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.4);\n  }\n  \n  /* Car windows */\n  &::after {\n    content: '';\n    position: absolute;\n    width: 30px;\n    height: 22px;\n    background: ${props => props.isShadow \n      ? 'linear-gradient(135deg, #999, #777)'\n      : 'linear-gradient(135deg, #3498db, #2980b9)'};\n    border-radius: 6px;\n    top: 4px;\n    left: 12px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Wheel = styled.div<{ left: number; isRear?: boolean }>`\n  width: 16px;\n  height: 16px;\n  background-color: #333;\n  border-radius: 50%;\n  position: absolute;\n  bottom: -7px;\n  left: ${props => props.left}px;\n  border: 3px solid #222;\n  animation: ${wheelSpin} 0.5s linear infinite;\n  transform-origin: center center;\n  \n  /* Wheel cap */\n  &::after {\n    content: '';\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    background-color: #aaa;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst headlightFlash = keyframes`\n  0%, 100% {\n    opacity: 0.7;\n    box-shadow: 0 0 10px 3px rgba(255, 235, 59, 0.7);\n  }\n  50% {\n    opacity: 1;\n    box-shadow: 0 0 15px 5px rgba(255, 235, 59, 0.9);\n  }\n`;\n\nconst Headlight = styled.div<{ left: number }>`\n  width: 8px;\n  height: 8px;\n  background-color: #ffeb3b;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 14px;\n  left: ${props => props.left}px;\n  box-shadow: 0 0 10px 3px rgba(255, 235, 59, 0.7);\n  z-index: 5;\n  animation: ${headlightFlash} 1s infinite;\n`;\n\nconst Exhaust = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 4px;\n  background-color: #333;\n  border-radius: 2px;\n  bottom: 8px;\n  left: 5px;\n  z-index: 3;\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 12px;\n    height: 8px;\n    background: linear-gradient(to left, rgba(100, 100, 100, 0.8), transparent);\n    left: -12px;\n    top: -2px;\n    border-radius: 4px;\n  }\n`;\n\nconst MileMarker = styled.div<{ position: number }>`\n  position: absolute;\n  top: 25%;\n  bottom: 25%;\n  width: 3px;\n  background-color: rgba(255, 255, 255, 0.5);\n  left: ${props => props.position}%;\n  z-index: 2;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: -4px;\n    width: 12px;\n    height: 12px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-radius: 50%;\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);\n  }\n  \n  &::before {\n    content: '${props => props.position}%';\n    position: absolute;\n    top: -20px;\n    left: -10px;\n    color: white;\n    font-weight: bold;\n    font-size: 12px;\n    text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);\n  }\n`;\n\nconst YouLabel = styled.div`\n  position: absolute;\n  top: 30%;\n  left: 40px;\n  color: white;\n  font-weight: bold;\n  font-size: 14px;\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8);\n  background-color: rgba(231, 76, 60, 0.7);\n  padding: 3px 8px;\n  border-radius: 10px;\n  z-index: 10;\n`;\n\nconst PreviousBestLabel = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 40px;\n  color: white;\n  font-weight: bold;\n  font-size: 14px;\n  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8);\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 3px 8px;\n  border-radius: 10px;\n  z-index: 10;\n`;\n\nconst RaceTrack: React.FC<RaceTrackProps> = ({ position, previousBestPosition = 0 }) => {\n  // Use ref to track previous position to prevent backward movement\n  const prevPositionRef = useRef<number>(0);\n  const displayPositionRef = useRef<number>(0);\n  \n  // Use a smaller value to make car movement more gradual\n  const speedFactor = 0.15; // Reduced from 0.25 to make movement even smoother\n  \n  useEffect(() => {\n    // Track animation frame to allow cancellation\n    let animationFrameId: number;\n    \n    // Animation function for smooth car movement\n    const animatePosition = () => {\n      // Calculate the new position with easing\n      const targetPosition = Math.max(5, Math.min(90, position));\n      const currentPosition = displayPositionRef.current;\n      const distance = targetPosition - currentPosition;\n      \n      // Only update if there's a significant distance to travel\n      if (Math.abs(distance) > 0.1) {\n        // Move a percentage of the remaining distance for smooth easing\n        const newPosition = currentPosition + distance * speedFactor;\n        displayPositionRef.current = newPosition;\n        prevPositionRef.current = newPosition;\n        \n        // Continue animation\n        animationFrameId = requestAnimationFrame(animatePosition);\n      } else if (distance !== 0) {\n        // Final step - snap to target position\n        displayPositionRef.current = targetPosition;\n        prevPositionRef.current = targetPosition;\n      }\n    };\n    \n    // Start animation\n    animationFrameId = requestAnimationFrame(animatePosition);\n    \n    // Cleanup animation on unmount or when position changes\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n    };\n  }, [position, speedFactor]);\n  \n  // Use the current display position for rendering\n  const carPosition = displayPositionRef.current;\n  \n  // Previous best position\n  const shadowPosition = previousBestPosition < 5 ? 5 : previousBestPosition;\n  \n  // Calculate position for mile markers\n  const mileMarkers = [25, 50, 75];\n  \n  return (\n    <TrackContainer>\n      <Clouds />\n      <TrackRoad />\n      <LaneDivider />\n      <StartLine />\n      {mileMarkers.map((markerPos, index) => (\n        <MileMarker key={index} position={markerPos} />\n      ))}\n      <FinishLine />\n      \n      <YouLabel>You</YouLabel>\n      <Car position={carPosition} isTopLane={true}>\n        <Wheel left={18} />\n        <Wheel left={55} isRear={true} />\n        <Headlight left={78} />\n        <Headlight left={78} />\n        <Exhaust />\n      </Car>\n      \n      <PreviousBestLabel>Best</PreviousBestLabel>\n      <Car position={shadowPosition} isTopLane={false} isShadow={true}>\n        <Wheel left={18} />\n        <Wheel left={55} isRear={true} />\n      </Car>\n    </TrackContainer>\n  );\n};\n\nexport default RaceTrack; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,CAAAC,MAAM,EAAIC,SAAS,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOtD,KAAM,CAAAC,cAAc,CAAGN,MAAM,CAACO,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGP,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAQ,MAAM,CAAGT,MAAM,CAACO,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,UAAU;AACzB,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGV,MAAM,CAACO,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAI,WAAW,CAAGX,MAAM,CAACO,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAK,eAAe,CAAGX,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAY,UAAU,CAAGb,MAAM,CAACO,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeK,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGd,MAAM,CAACO,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}