{"ast":null,"code":"import React from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SettingsContainer=styled.div`\n  background-color: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  max-width: 600px;\n  margin: 0 auto;\n`;const SettingsTitle=styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n  color: #333;\n`;const SettingsGroup=styled.div`\n  margin-bottom: 20px;\n`;const SettingsLabel=styled.h3`\n  margin-bottom: 10px;\n  color: #444;\n`;const ButtonGroup=styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;const Button=styled.button`\n  padding: 10px 15px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ${props=>props.active?'#3498db':'white'};\n  color: ${props=>props.active?'white':'#3498db'};\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  flex: 1;\n  \n  &:hover {\n    background-color: ${props=>props.active?'#2980b9':'#f1f9ff'};\n  }\n`;const StartButton=styled.button`\n  display: block;\n  width: 100%;\n  padding: 15px;\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #27ae60;\n  }\n`;const DifficultyDescription=styled.p`\n  margin-top: 10px;\n  color: #666;\n  font-style: italic;\n`;const GameSettings=_ref=>{let{difficulty,setDifficulty,timeSetting,setTimeSetting,onStartGame}=_ref;const getDifficultyDescription=()=>{switch(difficulty){case'easy':return'Simple vocabulary and common sentences - perfect for beginners.';case'medium':return'More complex vocabulary and sentence structures for intermediate typists.';case'hard':return'Advanced vocabulary, technical terms, and complex sentence structures for expert typists.';default:return'';}};return/*#__PURE__*/_jsxs(SettingsContainer,{children:[/*#__PURE__*/_jsx(SettingsTitle,{children:\"Game Settings\"}),/*#__PURE__*/_jsxs(SettingsGroup,{children:[/*#__PURE__*/_jsx(SettingsLabel,{children:\"Difficulty Level\"}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{active:difficulty==='easy',onClick:()=>setDifficulty('easy'),children:\"Easy\"}),/*#__PURE__*/_jsx(Button,{active:difficulty==='medium',onClick:()=>setDifficulty('medium'),children:\"Medium\"}),/*#__PURE__*/_jsx(Button,{active:difficulty==='hard',onClick:()=>setDifficulty('hard'),children:\"Hard\"})]}),/*#__PURE__*/_jsx(DifficultyDescription,{children:getDifficultyDescription()})]}),/*#__PURE__*/_jsxs(SettingsGroup,{children:[/*#__PURE__*/_jsx(SettingsLabel,{children:\"Time Setting\"}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{active:timeSetting===30,onClick:()=>setTimeSetting(30),children:\"30 Seconds\"}),/*#__PURE__*/_jsx(Button,{active:timeSetting===60,onClick:()=>setTimeSetting(60),children:\"1 Minute\"}),/*#__PURE__*/_jsx(Button,{active:timeSetting===120,onClick:()=>setTimeSetting(120),children:\"2 Minutes\"})]})]}),/*#__PURE__*/_jsx(StartButton,{onClick:onStartGame,children:\"Start Typing!\"})]});};export default GameSettings;","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","SettingsContainer","div","SettingsTitle","h2","SettingsGroup","SettingsLabel","h3","ButtonGroup","Button","button","props","active","StartButton","DifficultyDescription","p","GameSettings","_ref","difficulty","setDifficulty","timeSetting","setTimeSetting","onStartGame","getDifficultyDescription","children","onClick"],"sources":["/Users/ericwang/Theseus/typing-racer/src/components/GameSettings.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Difficulty, TimeSetting } from '../App';\n\ninterface GameSettingsProps {\n  difficulty: Difficulty;\n  setDifficulty: (difficulty: Difficulty) => void;\n  timeSetting: TimeSetting;\n  setTimeSetting: (time: TimeSetting) => void;\n  onStartGame: () => void;\n}\n\nconst SettingsContainer = styled.div`\n  background-color: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst SettingsTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n  color: #333;\n`;\n\nconst SettingsGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst SettingsLabel = styled.h3`\n  margin-bottom: 10px;\n  color: #444;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button<{ active?: boolean }>`\n  padding: 10px 15px;\n  border: 2px solid #3498db;\n  border-radius: 5px;\n  background-color: ${props => props.active ? '#3498db' : 'white'};\n  color: ${props => props.active ? 'white' : '#3498db'};\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  flex: 1;\n  \n  &:hover {\n    background-color: ${props => props.active ? '#2980b9' : '#f1f9ff'};\n  }\n`;\n\nconst StartButton = styled.button`\n  display: block;\n  width: 100%;\n  padding: 15px;\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #27ae60;\n  }\n`;\n\nconst DifficultyDescription = styled.p`\n  margin-top: 10px;\n  color: #666;\n  font-style: italic;\n`;\n\nconst GameSettings: React.FC<GameSettingsProps> = ({\n  difficulty,\n  setDifficulty,\n  timeSetting,\n  setTimeSetting,\n  onStartGame\n}) => {\n  const getDifficultyDescription = () => {\n    switch (difficulty) {\n      case 'easy':\n        return 'Simple vocabulary and common sentences - perfect for beginners.';\n      case 'medium':\n        return 'More complex vocabulary and sentence structures for intermediate typists.';\n      case 'hard':\n        return 'Advanced vocabulary, technical terms, and complex sentence structures for expert typists.';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <SettingsContainer>\n      <SettingsTitle>Game Settings</SettingsTitle>\n      \n      <SettingsGroup>\n        <SettingsLabel>Difficulty Level</SettingsLabel>\n        <ButtonGroup>\n          <Button \n            active={difficulty === 'easy'} \n            onClick={() => setDifficulty('easy')}\n          >\n            Easy\n          </Button>\n          <Button \n            active={difficulty === 'medium'} \n            onClick={() => setDifficulty('medium')}\n          >\n            Medium\n          </Button>\n          <Button \n            active={difficulty === 'hard'} \n            onClick={() => setDifficulty('hard')}\n          >\n            Hard\n          </Button>\n        </ButtonGroup>\n        <DifficultyDescription>{getDifficultyDescription()}</DifficultyDescription>\n      </SettingsGroup>\n      \n      <SettingsGroup>\n        <SettingsLabel>Time Setting</SettingsLabel>\n        <ButtonGroup>\n          <Button \n            active={timeSetting === 30} \n            onClick={() => setTimeSetting(30)}\n          >\n            30 Seconds\n          </Button>\n          <Button \n            active={timeSetting === 60} \n            onClick={() => setTimeSetting(60)}\n          >\n            1 Minute\n          </Button>\n          <Button \n            active={timeSetting === 120} \n            onClick={() => setTimeSetting(120)}\n          >\n            2 Minutes\n          </Button>\n        </ButtonGroup>\n      </SettingsGroup>\n      \n      <StartButton onClick={onStartGame}>Start Typing!</StartButton>\n    </SettingsContainer>\n  );\n};\n\nexport default GameSettings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}