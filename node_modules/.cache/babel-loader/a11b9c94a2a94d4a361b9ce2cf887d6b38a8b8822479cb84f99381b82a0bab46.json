{"ast":null,"code":"var _jsxFileName = \"/Users/ericwang/Theseus/typing-racer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport GameSettings from './components/GameSettings';\nimport TypingGame from './components/TypingGame';\n\n// Sample texts from each difficulty level\nimport { easyTexts } from './data/easyTexts';\nimport { mediumTexts } from './data/mediumTexts';\nimport { hardTexts } from './data/hardTexts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Roboto', sans-serif;\n`;\n_c = AppContainer;\nconst Footer = styled.footer`\n  margin-top: 40px;\n  text-align: center;\n  color: #666;\n  font-size: 0.8rem;\n`;\n_c2 = Footer;\nfunction App() {\n  _s();\n  const [difficulty, setDifficulty] = useState('medium');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [currentText, setCurrentText] = useState('');\n\n  // Select a random text based on difficulty\n  const selectRandomText = useCallback(difficulty => {\n    try {\n      let textPool;\n      switch (difficulty) {\n        case 'easy':\n          textPool = easyTexts;\n          break;\n        case 'medium':\n          textPool = mediumTexts;\n          break;\n        case 'hard':\n          textPool = hardTexts;\n          break;\n        default:\n          textPool = mediumTexts;\n      }\n\n      // Select a random text from the pool\n      const randomIndex = Math.floor(Math.random() * textPool.length);\n      return textPool[randomIndex].text;\n    } catch (error) {\n      console.error(\"Error selecting random text:\", error);\n      // Return a fallback text\n      return \"The quick brown fox jumps over the lazy dog. This is a fallback text due to an error in text selection.\";\n    }\n  }, []);\n\n  // Start a new game\n  const startGame = useCallback(() => {\n    try {\n      const text = selectRandomText(difficulty);\n      setCurrentText(text);\n      setGameStarted(true);\n    } catch (error) {\n      console.error(\"Error starting game:\", error);\n      // Set a fallback text\n      setCurrentText(\"The quick brown fox jumps over the lazy dog. Error occurred while starting the game.\");\n      setGameStarted(true);\n    }\n  }, [difficulty, selectRandomText]);\n\n  // End current game and return to settings\n  const endGame = useCallback(() => {\n    setGameStarted(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(GameSettings, {\n      difficulty: difficulty,\n      onDifficultyChange: setDifficulty,\n      onStartGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TypingGame, {\n      text: currentText,\n      difficulty: difficulty,\n      onEndGame: endGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: [\"\\xA9 \", new Date().getFullYear(), \" Typing Racer | Race to improve your typing speed!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+G+49jn8T80FVgCTeHDftHomZ8c=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","styled","Header","GameSettings","TypingGame","easyTexts","mediumTexts","hardTexts","jsxDEV","_jsxDEV","AppContainer","div","_c","Footer","footer","_c2","App","_s","difficulty","setDifficulty","gameStarted","setGameStarted","currentText","setCurrentText","selectRandomText","textPool","randomIndex","Math","floor","random","length","text","error","console","startGame","endGame","children","fileName","_jsxFileName","lineNumber","columnNumber","onDifficultyChange","onStartGame","onEndGame","Date","getFullYear","_c3","$RefreshReg$"],"sources":["/Users/ericwang/Theseus/typing-racer/src/App.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport GameSettings from './components/GameSettings';\nimport TypingGame from './components/TypingGame';\n\n// Sample texts from each difficulty level\nimport { easyTexts } from './data/easyTexts';\nimport { mediumTexts } from './data/mediumTexts';\nimport { hardTexts } from './data/hardTexts';\n\nexport type Difficulty = 'easy' | 'medium' | 'hard';\n\nconst AppContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Roboto', sans-serif;\n`;\n\nconst Footer = styled.footer`\n  margin-top: 40px;\n  text-align: center;\n  color: #666;\n  font-size: 0.8rem;\n`;\n\nfunction App() {\n  const [difficulty, setDifficulty] = useState<Difficulty>('medium');\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  const [currentText, setCurrentText] = useState<string>('');\n\n  // Select a random text based on difficulty\n  const selectRandomText = useCallback((difficulty: Difficulty): string => {\n    try {\n      let textPool;\n      \n      switch (difficulty) {\n        case 'easy':\n          textPool = easyTexts;\n          break;\n        case 'medium':\n          textPool = mediumTexts;\n          break;\n        case 'hard':\n          textPool = hardTexts;\n          break;\n        default:\n          textPool = mediumTexts;\n      }\n      \n      // Select a random text from the pool\n      const randomIndex = Math.floor(Math.random() * textPool.length);\n      return textPool[randomIndex].text;\n    } catch (error) {\n      console.error(\"Error selecting random text:\", error);\n      // Return a fallback text\n      return \"The quick brown fox jumps over the lazy dog. This is a fallback text due to an error in text selection.\";\n    }\n  }, []);\n\n  // Start a new game\n  const startGame = useCallback(() => {\n    try {\n      const text = selectRandomText(difficulty);\n      setCurrentText(text);\n      setGameStarted(true);\n    } catch (error) {\n      console.error(\"Error starting game:\", error);\n      // Set a fallback text\n      setCurrentText(\"The quick brown fox jumps over the lazy dog. Error occurred while starting the game.\");\n      setGameStarted(true);\n    }\n  }, [difficulty, selectRandomText]);\n\n  // End current game and return to settings\n  const endGame = useCallback(() => {\n    setGameStarted(false);\n  }, []);\n\n  return (\n    <AppContainer>\n      <Header />\n      \n      {!gameStarted ? (\n        <GameSettings \n          difficulty={difficulty}\n          onDifficultyChange={setDifficulty}\n          onStartGame={startGame}\n        />\n      ) : (\n        <TypingGame \n          text={currentText}\n          difficulty={difficulty}\n          onEndGame={endGame}\n        />\n      )}\n      \n      <Footer>\n        Â© {new Date().getFullYear()} Typing Racer | Race to improve your typing speed!\n      </Footer>\n    </AppContainer>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}