{"ast":null,"code":"var _jsxFileName = \"/Users/ericwang/Theseus/typing-racer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, Component } from 'react';\nimport styled from 'styled-components';\nimport GameSettings from './components/GameSettings';\nimport TypingGame from './components/TypingGame';\nimport Header from './components/Header';\nimport { easyTexts } from './data/easyTexts';\nimport { mediumTexts } from './data/mediumTexts';\nimport { hardTexts } from './data/hardTexts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n`;\n_c = AppContainer;\nconst ErrorContainer = styled.div`\n  background-color: #ffebee;\n  border: 1px solid #f44336;\n  color: #d32f2f;\n  padding: 20px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n`;\n_c2 = ErrorContainer;\nconst ErrorHeading = styled.h3`\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n_c3 = ErrorHeading;\nconst ErrorDetails = styled.details`\n  margin-top: 10px;\n  cursor: pointer;\n`;\n_c4 = ErrorDetails;\nconst ErrorSummary = styled.summary`\n  font-weight: bold;\n`;\n_c5 = ErrorSummary;\n// Error Boundary to catch and display errors\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render shows the fallback UI\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // Log the error to console\n    console.error('Error in Typing Racer app:', error, errorInfo);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n  render() {\n    if (this.state.hasError) {\n      // Render fallback UI\n      return /*#__PURE__*/_jsxDEV(ErrorContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ErrorHeading, {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We're sorry, but there was an error loading the application. Please try refreshing the page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorDetails, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorSummary, {\n            children: \"Technical Details (for developers)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.error && this.state.error.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: this.state.errorInfo && this.state.errorInfo.componentStack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}\nconst App = () => {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [difficulty, setDifficulty] = useState('easy');\n  const [timeSetting, setTimeSetting] = useState(60);\n  const [textIndex, setTextIndex] = useState(0);\n  const getTexts = () => {\n    try {\n      switch (difficulty) {\n        case 'easy':\n          return easyTexts;\n        case 'medium':\n          return mediumTexts;\n        case 'hard':\n          return hardTexts;\n        default:\n          return easyTexts;\n      }\n    } catch (error) {\n      console.error(\"Error loading text data:\", error);\n      return easyTexts; // Fallback to easy texts\n    }\n  };\n  const handleStartGame = () => {\n    try {\n      // Randomly select a text for the chosen difficulty\n      const texts = getTexts();\n      const randomIndex = Math.floor(Math.random() * texts.length);\n      setTextIndex(randomIndex);\n      setGameStarted(true);\n    } catch (error) {\n      console.error(\"Error starting game:\", error);\n      alert(\"There was an error starting the game. Please try again.\");\n    }\n  };\n  const handleEndGame = () => {\n    setGameStarted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(GameSettings, {\n        difficulty: difficulty,\n        setDifficulty: setDifficulty,\n        timeSetting: timeSetting,\n        setTimeSetting: setTimeSetting,\n        onStartGame: handleStartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TypingGame, {\n        text: getTexts()[textIndex].text,\n        timeSetting: timeSetting,\n        difficulty: difficulty,\n        onEndGame: handleEndGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"e/8Hw7VCrlUODQiCpSwwAmacBlQ=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"ErrorContainer\");\n$RefreshReg$(_c3, \"ErrorHeading\");\n$RefreshReg$(_c4, \"ErrorDetails\");\n$RefreshReg$(_c5, \"ErrorSummary\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","Component","styled","GameSettings","TypingGame","Header","easyTexts","mediumTexts","hardTexts","jsxDEV","_jsxDEV","AppContainer","div","_c","ErrorContainer","_c2","ErrorHeading","h3","_c3","ErrorDetails","details","_c4","ErrorSummary","summary","_c5","ErrorBoundary","constructor","props","state","hasError","error","errorInfo","getDerivedStateFromError","componentDidCatch","console","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","componentStack","App","_s","gameStarted","setGameStarted","difficulty","setDifficulty","timeSetting","setTimeSetting","textIndex","setTextIndex","getTexts","handleStartGame","texts","randomIndex","Math","floor","random","length","alert","handleEndGame","onStartGame","text","onEndGame","_c6","$RefreshReg$"],"sources":["/Users/ericwang/Theseus/typing-racer/src/App.tsx"],"sourcesContent":["import React, { useState, Component, ErrorInfo, ReactNode } from 'react';\nimport styled from 'styled-components';\nimport GameSettings from './components/GameSettings';\nimport TypingGame from './components/TypingGame';\nimport Header from './components/Header';\nimport { easyTexts } from './data/easyTexts';\nimport { mediumTexts } from './data/mediumTexts';\nimport { hardTexts } from './data/hardTexts';\n\nexport type Difficulty = 'easy' | 'medium' | 'hard';\nexport type TimeSetting = 30 | 60 | 120;\n\nconst AppContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n`;\n\nconst ErrorContainer = styled.div`\n  background-color: #ffebee;\n  border: 1px solid #f44336;\n  color: #d32f2f;\n  padding: 20px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n`;\n\nconst ErrorHeading = styled.h3`\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\nconst ErrorDetails = styled.details`\n  margin-top: 10px;\n  cursor: pointer;\n`;\n\nconst ErrorSummary = styled.summary`\n  font-weight: bold;\n`;\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\n// Error Boundary to catch and display errors\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render shows the fallback UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // Log the error to console\n    console.error('Error in Typing Racer app:', error, errorInfo);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Render fallback UI\n      return (\n        <ErrorContainer>\n          <ErrorHeading>Something went wrong</ErrorHeading>\n          <p>We're sorry, but there was an error loading the application. Please try refreshing the page.</p>\n          <ErrorDetails>\n            <ErrorSummary>Technical Details (for developers)</ErrorSummary>\n            <p>{this.state.error && this.state.error.toString()}</p>\n            <pre>{this.state.errorInfo && this.state.errorInfo.componentStack}</pre>\n          </ErrorDetails>\n        </ErrorContainer>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst App: React.FC = () => {\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  const [difficulty, setDifficulty] = useState<Difficulty>('easy');\n  const [timeSetting, setTimeSetting] = useState<TimeSetting>(60);\n  const [textIndex, setTextIndex] = useState<number>(0);\n\n  const getTexts = () => {\n    try {\n      switch (difficulty) {\n        case 'easy':\n          return easyTexts;\n        case 'medium':\n          return mediumTexts;\n        case 'hard':\n          return hardTexts;\n        default:\n          return easyTexts;\n      }\n    } catch (error) {\n      console.error(\"Error loading text data:\", error);\n      return easyTexts; // Fallback to easy texts\n    }\n  };\n\n  const handleStartGame = () => {\n    try {\n      // Randomly select a text for the chosen difficulty\n      const texts = getTexts();\n      const randomIndex = Math.floor(Math.random() * texts.length);\n      setTextIndex(randomIndex);\n      setGameStarted(true);\n    } catch (error) {\n      console.error(\"Error starting game:\", error);\n      alert(\"There was an error starting the game. Please try again.\");\n    }\n  };\n\n  const handleEndGame = () => {\n    setGameStarted(false);\n  };\n\n  return (\n    <ErrorBoundary>\n      <AppContainer>\n        <Header />\n        {!gameStarted ? (\n          <GameSettings\n            difficulty={difficulty}\n            setDifficulty={setDifficulty}\n            timeSetting={timeSetting}\n            setTimeSetting={setTimeSetting}\n            onStartGame={handleStartGame}\n          />\n        ) : (\n          <TypingGame\n            text={getTexts()[textIndex].text}\n            timeSetting={timeSetting}\n            difficulty={difficulty}\n            onEndGame={handleEndGame}\n          />\n        )}\n      </AppContainer>\n    </ErrorBoundary>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}