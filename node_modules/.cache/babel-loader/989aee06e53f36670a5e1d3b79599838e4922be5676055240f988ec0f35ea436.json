{"ast":null,"code":"import React from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultsContainer=styled.div`\n  background-color: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: center;\n`;const ResultsTitle=styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n`;const ScoreDisplay=styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  color: #3498db;\n  margin: 20px 0;\n`;const StatsGrid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 15px;\n  margin: 30px 0;\n`;const StatCard=styled.div`\n  background-color: #f5f5f5;\n  padding: 15px;\n  border-radius: 8px;\n`;const StatLabel=styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 5px;\n`;const StatValue=styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #333;\n`;const PlayAgainButton=styled.button`\n  padding: 15px 30px;\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  margin-top: 20px;\n  \n  &:hover {\n    background-color: #27ae60;\n  }\n`;const ResultMessage=styled.p`\n  font-size: 1.1rem;\n  color: #555;\n  margin: 20px 0;\n`;const Results=_ref=>{let{wpm,accuracy,correctChars,incorrectChars,wordsTyped,score,difficulty,timeSetting,onPlayAgain}=_ref;const getScoreEvaluation=()=>{if(score>=9000){return\"Incredible! You're a typing master!\";}else if(score>=7000){return\"Excellent! Your typing skills are impressive!\";}else if(score>=5000){return\"Great job! You're a skilled typist!\";}else if(score>=3000){return\"Good work! Keep practicing to improve!\";}else if(score>=1000){return\"Nice effort! Regular practice will help you get better!\";}else{return\"Good start! Keep practicing to improve your speed and accuracy!\";}};return/*#__PURE__*/_jsxs(ResultsContainer,{children:[/*#__PURE__*/_jsx(ResultsTitle,{children:\"Your Typing Results\"}),/*#__PURE__*/_jsxs(ScoreDisplay,{children:[score,\" / 10000\"]}),/*#__PURE__*/_jsx(ResultMessage,{children:getScoreEvaluation()}),/*#__PURE__*/_jsxs(StatsGrid,{children:[/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Words Per Minute\"}),/*#__PURE__*/_jsx(StatValue,{children:wpm})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Accuracy\"}),/*#__PURE__*/_jsxs(StatValue,{children:[accuracy,\"%\"]})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Words Typed\"}),/*#__PURE__*/_jsx(StatValue,{children:wordsTyped})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Correct Characters\"}),/*#__PURE__*/_jsx(StatValue,{children:correctChars})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Incorrect Characters\"}),/*#__PURE__*/_jsx(StatValue,{children:incorrectChars})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatLabel,{children:\"Total Characters\"}),/*#__PURE__*/_jsx(StatValue,{children:correctChars+incorrectChars})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(StatLabel,{children:[\"Difficulty: \",difficulty.charAt(0).toUpperCase()+difficulty.slice(1)]}),/*#__PURE__*/_jsxs(StatLabel,{children:[\"Time: \",timeSetting,\" seconds\"]})]}),/*#__PURE__*/_jsx(PlayAgainButton,{onClick:onPlayAgain,children:\"Play Again\"})]});};export default Results;","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","ResultsContainer","div","ResultsTitle","h2","ScoreDisplay","StatsGrid","StatCard","StatLabel","StatValue","PlayAgainButton","button","ResultMessage","p","Results","_ref","wpm","accuracy","correctChars","incorrectChars","wordsTyped","score","difficulty","timeSetting","onPlayAgain","getScoreEvaluation","children","charAt","toUpperCase","slice","onClick"],"sources":["/Users/ericwang/Theseus/typing-racer/src/components/Results.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Difficulty, TimeSetting } from '../App';\n\ninterface ResultsProps {\n  wpm: number;\n  accuracy: number;\n  correctChars: number;\n  incorrectChars: number;\n  wordsTyped: number;\n  score: number;\n  difficulty: Difficulty;\n  timeSetting: TimeSetting;\n  onPlayAgain: () => void;\n}\n\nconst ResultsContainer = styled.div`\n  background-color: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  max-width: 600px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst ResultsTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n`;\n\nconst ScoreDisplay = styled.div`\n  font-size: 3rem;\n  font-weight: bold;\n  color: #3498db;\n  margin: 20px 0;\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 15px;\n  margin: 30px 0;\n`;\n\nconst StatCard = styled.div`\n  background-color: #f5f5f5;\n  padding: 15px;\n  border-radius: 8px;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 5px;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #333;\n`;\n\nconst PlayAgainButton = styled.button`\n  padding: 15px 30px;\n  background-color: #2ecc71;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  margin-top: 20px;\n  \n  &:hover {\n    background-color: #27ae60;\n  }\n`;\n\nconst ResultMessage = styled.p`\n  font-size: 1.1rem;\n  color: #555;\n  margin: 20px 0;\n`;\n\nconst Results: React.FC<ResultsProps> = ({\n  wpm,\n  accuracy,\n  correctChars,\n  incorrectChars,\n  wordsTyped,\n  score,\n  difficulty,\n  timeSetting,\n  onPlayAgain\n}) => {\n  const getScoreEvaluation = () => {\n    if (score >= 9000) {\n      return \"Incredible! You're a typing master!\";\n    } else if (score >= 7000) {\n      return \"Excellent! Your typing skills are impressive!\";\n    } else if (score >= 5000) {\n      return \"Great job! You're a skilled typist!\";\n    } else if (score >= 3000) {\n      return \"Good work! Keep practicing to improve!\";\n    } else if (score >= 1000) {\n      return \"Nice effort! Regular practice will help you get better!\";\n    } else {\n      return \"Good start! Keep practicing to improve your speed and accuracy!\";\n    }\n  };\n\n  return (\n    <ResultsContainer>\n      <ResultsTitle>Your Typing Results</ResultsTitle>\n      \n      <ScoreDisplay>{score} / 10000</ScoreDisplay>\n      <ResultMessage>{getScoreEvaluation()}</ResultMessage>\n      \n      <StatsGrid>\n        <StatCard>\n          <StatLabel>Words Per Minute</StatLabel>\n          <StatValue>{wpm}</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatLabel>Accuracy</StatLabel>\n          <StatValue>{accuracy}%</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatLabel>Words Typed</StatLabel>\n          <StatValue>{wordsTyped}</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatLabel>Correct Characters</StatLabel>\n          <StatValue>{correctChars}</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatLabel>Incorrect Characters</StatLabel>\n          <StatValue>{incorrectChars}</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatLabel>Total Characters</StatLabel>\n          <StatValue>{correctChars + incorrectChars}</StatValue>\n        </StatCard>\n      </StatsGrid>\n      \n      <div>\n        <StatLabel>Difficulty: {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}</StatLabel>\n        <StatLabel>Time: {timeSetting} seconds</StatLabel>\n      </div>\n      \n      <PlayAgainButton onClick={onPlayAgain}>\n        Play Again\n      </PlayAgainButton>\n    </ResultsContainer>\n  );\n};\n\nexport default Results; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}