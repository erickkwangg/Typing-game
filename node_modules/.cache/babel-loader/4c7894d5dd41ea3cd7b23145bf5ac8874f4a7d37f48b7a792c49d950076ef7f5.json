{"ast":null,"code":"import React from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultsContainer=styled.div`\n  background-color: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n  max-width: 700px;\n  margin: 0 auto;\n  text-align: center;\n`;const ResultsTitle=styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n  font-size: 2rem;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -10px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 100px;\n    height: 3px;\n    background-color: #3498db;\n    border-radius: 3px;\n  }\n`;const ScoreDisplay=styled.div`\n  font-size: 4rem;\n  font-weight: bold;\n  color: #3498db;\n  margin: 30px 0;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;const ScoreValue=styled.span`\n  background: linear-gradient(135deg, #3498db, #2980b9);\n  color: white;\n  padding: 10px 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;const ScoreMax=styled.span`\n  font-size: 1.5rem;\n  color: #777;\n  margin-left: 15px;\n  font-weight: normal;\n`;const StatsGrid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  margin: 40px 0;\n`;const StatCard=styled.div`\n  background-color: #f5f5f5;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n  transition: transform 0.2s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\n  }\n`;const StatIcon=styled.div`\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n  color: #3498db;\n`;const StatLabel=styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 5px;\n`;const StatValue=styled.div`\n  font-size: 1.8rem;\n  font-weight: bold;\n  color: #333;\n`;const PlayAgainButton=styled.button`\n  padding: 15px 30px;\n  background: linear-gradient(135deg, #2ecc71, #27ae60);\n  color: white;\n  border: none;\n  border-radius: 50px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-top: 30px;\n  \n  &:hover {\n    background: linear-gradient(135deg, #27ae60, #219951);\n    transform: translateY(-3px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\n  }\n  \n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n`;const ResultMessage=styled.p`\n  font-size: 1.2rem;\n  margin: 20px 0;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: ${props=>{switch(props.performance){case'excellent':return'rgba(46, 204, 113, 0.1)';case'good':return'rgba(52, 152, 219, 0.1)';case'average':return'rgba(241, 196, 15, 0.1)';case'beginner':return'rgba(230, 126, 34, 0.1)';}}};\n  color: ${props=>{switch(props.performance){case'excellent':return'#27ae60';case'good':return'#2980b9';case'average':return'#d35400';case'beginner':return'#e67e22';}}};\n  font-weight: 500;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n`;const SettingsInfo=styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;const SettingBadge=styled.div`\n  padding: 8px 15px;\n  border-radius: 20px;\n  font-size: 0.9rem;\n  background-color: ${props=>{if(props.difficulty){switch(props.difficulty){case'easy':return'rgba(46, 204, 113, 0.2)';case'medium':return'rgba(241, 196, 15, 0.2)';case'hard':return'rgba(231, 76, 60, 0.2)';default:return'rgba(52, 152, 219, 0.2)';}}return'rgba(52, 152, 219, 0.2)';}};\n  color: ${props=>{if(props.difficulty){switch(props.difficulty){case'easy':return'#27ae60';case'medium':return'#d35400';case'hard':return'#c0392b';default:return'#2980b9';}}return'#2980b9';}};\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n`;const ImprovementLabel=styled.div`\n  display: inline-block;\n  margin-left: 10px;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  background-color: ${props=>props.isImprovement?'rgba(46, 204, 113, 0.2)':'rgba(231, 76, 60, 0.2)'};\n  color: ${props=>props.isImprovement?'#27ae60':'#e74c3c'};\n`;const ComparisonContainer=styled.div`\n  background-color: rgba(52, 152, 219, 0.1);\n  border-radius: 8px;\n  padding: 15px;\n  margin: 15px 0 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;const ComparisonTitle=styled.div`\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #2980b9;\n`;const ComparisonRow=styled.div`\n  display: flex;\n  align-items: center;\n  margin: 5px 0;\n  width: 100%;\n  justify-content: center;\n`;const ComparisonLabel=styled.div`\n  width: 100px;\n  text-align: right;\n  padding-right: 15px;\n  color: #555;\n`;const ComparisonValue=styled.div`\n  width: 70px;\n  text-align: center;\n  font-weight: bold;\n  color: #333;\n`;const ComparisonBar=styled.div`\n  flex-grow: 1;\n  height: 30px;\n  background-color: #eee;\n  border-radius: 15px;\n  margin: 0 15px;\n  position: relative;\n  overflow: hidden;\n  max-width: 300px;\n`;const ComparisonFill=styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: ${props=>props.width}%;\n  background: ${props=>props.isCurrentRun?'linear-gradient(to right, #3498db, #2980b9)':'linear-gradient(to right, #95a5a6, #7f8c8d)'};\n  border-radius: 15px;\n  transition: width 1s ease-out;\n`;const Results=_ref=>{let{wpm,accuracy,correctChars,incorrectChars,wordsTyped,score,difficulty,timeSetting,onPlayAgain,previousBestWpm=0}=_ref;const getPerformanceLevel=()=>{if(score>=7500)return'excellent';if(score>=5000)return'good';if(score>=2500)return'average';return'beginner';};const getScoreEvaluation=()=>{const performance=getPerformanceLevel();switch(performance){case'excellent':return\"Incredible! You're a typing master with lightning-fast fingers!\";case'good':return\"Great job! Your typing skills are impressive and well above average!\";case'average':return\"Good work! You have solid typing skills. Keep practicing to get even better!\";case'beginner':return\"Nice effort! Regular practice will help you increase your speed and accuracy!\";}};const getWpmEvaluation=()=>{if(wpm>=100)return\"Lightning fast\";if(wpm>=70)return\"Very fast\";if(wpm>=50)return\"Above average\";if(wpm>=30)return\"Average\";return\"Developing\";};const getAccuracyEvaluation=()=>{if(accuracy>=98)return\"Perfect\";if(accuracy>=95)return\"Excellent\";if(accuracy>=90)return\"Good\";if(accuracy>=80)return\"Fair\";return\"Needs work\";};// Calculate improvement\nconst isNewBest=previousBestWpm>0&&wpm>previousBestWpm;const improvement=previousBestWpm>0?wpm-previousBestWpm:0;const improvementPercent=previousBestWpm>0?Math.round(improvement/previousBestWpm*100):0;// Calculate the width for comparison bars (max 100%)\nconst maxWpm=Math.max(wpm,previousBestWpm,100);const currentWpmWidth=wpm/maxWpm*100;const previousWpmWidth=previousBestWpm/maxWpm*100;return/*#__PURE__*/_jsxs(ResultsContainer,{children:[/*#__PURE__*/_jsx(ResultsTitle,{children:\"Your Typing Results\"}),/*#__PURE__*/_jsxs(ScoreDisplay,{children:[/*#__PURE__*/_jsx(ScoreValue,{children:score}),/*#__PURE__*/_jsx(ScoreMax,{children:\"/ 10000\"})]}),/*#__PURE__*/_jsx(ResultMessage,{performance:getPerformanceLevel(),children:getScoreEvaluation()}),/*#__PURE__*/_jsxs(SettingsInfo,{children:[/*#__PURE__*/_jsx(SettingBadge,{difficulty:difficulty,children:difficulty.charAt(0).toUpperCase()+difficulty.slice(1)}),/*#__PURE__*/_jsxs(SettingBadge,{children:[timeSetting,\" seconds\"]})]}),previousBestWpm>0&&/*#__PURE__*/_jsxs(ComparisonContainer,{children:[/*#__PURE__*/_jsx(ComparisonTitle,{children:\"WPM Comparison\"}),/*#__PURE__*/_jsxs(ComparisonRow,{children:[/*#__PURE__*/_jsx(ComparisonLabel,{children:\"This Run\"}),/*#__PURE__*/_jsx(ComparisonBar,{children:/*#__PURE__*/_jsx(ComparisonFill,{width:currentWpmWidth,isCurrentRun:true})}),/*#__PURE__*/_jsxs(ComparisonValue,{children:[wpm,isNewBest&&/*#__PURE__*/_jsxs(ImprovementLabel,{isImprovement:true,children:[\"+\",improvementPercent,\"%\"]})]})]}),/*#__PURE__*/_jsxs(ComparisonRow,{children:[/*#__PURE__*/_jsx(ComparisonLabel,{children:\"Previous Best\"}),/*#__PURE__*/_jsx(ComparisonBar,{children:/*#__PURE__*/_jsx(ComparisonFill,{width:previousWpmWidth,isCurrentRun:false})}),/*#__PURE__*/_jsx(ComparisonValue,{children:previousBestWpm})]})]}),/*#__PURE__*/_jsxs(StatsGrid,{children:[/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:\"\\u26A1\"}),/*#__PURE__*/_jsx(StatLabel,{children:\"Words Per Minute\"}),/*#__PURE__*/_jsx(StatValue,{children:wpm}),/*#__PURE__*/_jsx(StatLabel,{children:getWpmEvaluation()})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(StatLabel,{children:\"Accuracy\"}),/*#__PURE__*/_jsxs(StatValue,{children:[accuracy,\"%\"]}),/*#__PURE__*/_jsx(StatLabel,{children:getAccuracyEvaluation()})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(StatLabel,{children:\"Words Typed\"}),/*#__PURE__*/_jsx(StatValue,{children:wordsTyped})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:\"\\u2713\"}),/*#__PURE__*/_jsx(StatLabel,{children:\"Correct Characters\"}),/*#__PURE__*/_jsx(StatValue,{children:correctChars})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:\"\\u2717\"}),/*#__PURE__*/_jsx(StatLabel,{children:\"Incorrect Characters\"}),/*#__PURE__*/_jsx(StatValue,{children:incorrectChars})]}),/*#__PURE__*/_jsxs(StatCard,{children:[/*#__PURE__*/_jsx(StatIcon,{children:\"\\uD83D\\uDD24\"}),/*#__PURE__*/_jsx(StatLabel,{children:\"Total Characters\"}),/*#__PURE__*/_jsx(StatValue,{children:correctChars+incorrectChars})]})]}),/*#__PURE__*/_jsx(PlayAgainButton,{onClick:onPlayAgain,children:\"Race Again\"})]});};export default Results;","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","ResultsContainer","div","ResultsTitle","h2","ScoreDisplay","ScoreValue","span","ScoreMax","StatsGrid","StatCard","StatIcon","StatLabel","StatValue","PlayAgainButton","button","ResultMessage","p","props","performance","SettingsInfo","SettingBadge","difficulty","ImprovementLabel","isImprovement","ComparisonContainer","ComparisonTitle","ComparisonRow","ComparisonLabel","ComparisonValue","ComparisonBar","ComparisonFill","width","isCurrentRun","Results","_ref","wpm","accuracy","correctChars","incorrectChars","wordsTyped","score","timeSetting","onPlayAgain","previousBestWpm","getPerformanceLevel","getScoreEvaluation","getWpmEvaluation","getAccuracyEvaluation","isNewBest","improvement","improvementPercent","Math","round","maxWpm","max","currentWpmWidth","previousWpmWidth","children","charAt","toUpperCase","slice","onClick"],"sources":["/Users/ericwang/Theseus/typing-racer/src/components/Results.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Difficulty, TimeSetting } from '../App';\n\ninterface ResultsProps {\n  wpm: number;\n  accuracy: number;\n  correctChars: number;\n  incorrectChars: number;\n  wordsTyped: number;\n  score: number;\n  difficulty: Difficulty;\n  timeSetting: TimeSetting;\n  onPlayAgain: () => void;\n  previousBestWpm?: number;\n}\n\nconst ResultsContainer = styled.div`\n  background-color: white;\n  border-radius: 10px;\n  padding: 30px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n  max-width: 700px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst ResultsTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n  font-size: 2rem;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -10px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 100px;\n    height: 3px;\n    background-color: #3498db;\n    border-radius: 3px;\n  }\n`;\n\nconst ScoreDisplay = styled.div`\n  font-size: 4rem;\n  font-weight: bold;\n  color: #3498db;\n  margin: 30px 0;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ScoreValue = styled.span`\n  background: linear-gradient(135deg, #3498db, #2980b9);\n  color: white;\n  padding: 10px 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nconst ScoreMax = styled.span`\n  font-size: 1.5rem;\n  color: #777;\n  margin-left: 15px;\n  font-weight: normal;\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  margin: 40px 0;\n`;\n\nconst StatCard = styled.div`\n  background-color: #f5f5f5;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n  transition: transform 0.2s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst StatIcon = styled.div`\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n  color: #3498db;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 5px;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: bold;\n  color: #333;\n`;\n\nconst PlayAgainButton = styled.button`\n  padding: 15px 30px;\n  background: linear-gradient(135deg, #2ecc71, #27ae60);\n  color: white;\n  border: none;\n  border-radius: 50px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-top: 30px;\n  \n  &:hover {\n    background: linear-gradient(135deg, #27ae60, #219951);\n    transform: translateY(-3px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\n  }\n  \n  &:active {\n    transform: translateY(0);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst ResultMessage = styled.p<{ performance: 'excellent' | 'good' | 'average' | 'beginner' }>`\n  font-size: 1.2rem;\n  margin: 20px 0;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: ${props => {\n    switch (props.performance) {\n      case 'excellent': return 'rgba(46, 204, 113, 0.1)';\n      case 'good': return 'rgba(52, 152, 219, 0.1)';\n      case 'average': return 'rgba(241, 196, 15, 0.1)';\n      case 'beginner': return 'rgba(230, 126, 34, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.performance) {\n      case 'excellent': return '#27ae60';\n      case 'good': return '#2980b9';\n      case 'average': return '#d35400';\n      case 'beginner': return '#e67e22';\n    }\n  }};\n  font-weight: 500;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n`;\n\nconst SettingsInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nconst SettingBadge = styled.div<{ difficulty?: Difficulty }>`\n  padding: 8px 15px;\n  border-radius: 20px;\n  font-size: 0.9rem;\n  background-color: ${props => {\n    if (props.difficulty) {\n      switch (props.difficulty) {\n        case 'easy': return 'rgba(46, 204, 113, 0.2)';\n        case 'medium': return 'rgba(241, 196, 15, 0.2)';\n        case 'hard': return 'rgba(231, 76, 60, 0.2)';\n        default: return 'rgba(52, 152, 219, 0.2)';\n      }\n    }\n    return 'rgba(52, 152, 219, 0.2)';\n  }};\n  color: ${props => {\n    if (props.difficulty) {\n      switch (props.difficulty) {\n        case 'easy': return '#27ae60';\n        case 'medium': return '#d35400';\n        case 'hard': return '#c0392b';\n        default: return '#2980b9';\n      }\n    }\n    return '#2980b9';\n  }};\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n`;\n\nconst ImprovementLabel = styled.div<{ isImprovement: boolean }>`\n  display: inline-block;\n  margin-left: 10px;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  background-color: ${props => props.isImprovement ? 'rgba(46, 204, 113, 0.2)' : 'rgba(231, 76, 60, 0.2)'};\n  color: ${props => props.isImprovement ? '#27ae60' : '#e74c3c'};\n`;\n\nconst ComparisonContainer = styled.div`\n  background-color: rgba(52, 152, 219, 0.1);\n  border-radius: 8px;\n  padding: 15px;\n  margin: 15px 0 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst ComparisonTitle = styled.div`\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #2980b9;\n`;\n\nconst ComparisonRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 5px 0;\n  width: 100%;\n  justify-content: center;\n`;\n\nconst ComparisonLabel = styled.div`\n  width: 100px;\n  text-align: right;\n  padding-right: 15px;\n  color: #555;\n`;\n\nconst ComparisonValue = styled.div`\n  width: 70px;\n  text-align: center;\n  font-weight: bold;\n  color: #333;\n`;\n\nconst ComparisonBar = styled.div`\n  flex-grow: 1;\n  height: 30px;\n  background-color: #eee;\n  border-radius: 15px;\n  margin: 0 15px;\n  position: relative;\n  overflow: hidden;\n  max-width: 300px;\n`;\n\nconst ComparisonFill = styled.div<{ width: number; isCurrentRun: boolean }>`\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: ${props => props.width}%;\n  background: ${props => props.isCurrentRun \n    ? 'linear-gradient(to right, #3498db, #2980b9)' \n    : 'linear-gradient(to right, #95a5a6, #7f8c8d)'};\n  border-radius: 15px;\n  transition: width 1s ease-out;\n`;\n\nconst Results: React.FC<ResultsProps> = ({\n  wpm,\n  accuracy,\n  correctChars,\n  incorrectChars,\n  wordsTyped,\n  score,\n  difficulty,\n  timeSetting,\n  onPlayAgain,\n  previousBestWpm = 0\n}) => {\n  const getPerformanceLevel = (): 'excellent' | 'good' | 'average' | 'beginner' => {\n    if (score >= 7500) return 'excellent';\n    if (score >= 5000) return 'good';\n    if (score >= 2500) return 'average';\n    return 'beginner';\n  };\n\n  const getScoreEvaluation = () => {\n    const performance = getPerformanceLevel();\n    \n    switch (performance) {\n      case 'excellent':\n        return \"Incredible! You're a typing master with lightning-fast fingers!\";\n      case 'good':\n        return \"Great job! Your typing skills are impressive and well above average!\";\n      case 'average':\n        return \"Good work! You have solid typing skills. Keep practicing to get even better!\";\n      case 'beginner':\n        return \"Nice effort! Regular practice will help you increase your speed and accuracy!\";\n    }\n  };\n\n  const getWpmEvaluation = () => {\n    if (wpm >= 100) return \"Lightning fast\";\n    if (wpm >= 70) return \"Very fast\";\n    if (wpm >= 50) return \"Above average\";\n    if (wpm >= 30) return \"Average\";\n    return \"Developing\";\n  };\n\n  const getAccuracyEvaluation = () => {\n    if (accuracy >= 98) return \"Perfect\";\n    if (accuracy >= 95) return \"Excellent\";\n    if (accuracy >= 90) return \"Good\";\n    if (accuracy >= 80) return \"Fair\";\n    return \"Needs work\";\n  };\n\n  // Calculate improvement\n  const isNewBest = previousBestWpm > 0 && wpm > previousBestWpm;\n  const improvement = previousBestWpm > 0 ? wpm - previousBestWpm : 0;\n  const improvementPercent = previousBestWpm > 0 \n    ? Math.round((improvement / previousBestWpm) * 100) \n    : 0;\n\n  // Calculate the width for comparison bars (max 100%)\n  const maxWpm = Math.max(wpm, previousBestWpm, 100);\n  const currentWpmWidth = (wpm / maxWpm) * 100;\n  const previousWpmWidth = (previousBestWpm / maxWpm) * 100;\n\n  return (\n    <ResultsContainer>\n      <ResultsTitle>Your Typing Results</ResultsTitle>\n      \n      <ScoreDisplay>\n        <ScoreValue>{score}</ScoreValue>\n        <ScoreMax>/ 10000</ScoreMax>\n      </ScoreDisplay>\n      \n      <ResultMessage performance={getPerformanceLevel()}>\n        {getScoreEvaluation()}\n      </ResultMessage>\n      \n      <SettingsInfo>\n        <SettingBadge difficulty={difficulty}>\n          {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}\n        </SettingBadge>\n        <SettingBadge>\n          {timeSetting} seconds\n        </SettingBadge>\n      </SettingsInfo>\n      \n      {previousBestWpm > 0 && (\n        <ComparisonContainer>\n          <ComparisonTitle>WPM Comparison</ComparisonTitle>\n          <ComparisonRow>\n            <ComparisonLabel>This Run</ComparisonLabel>\n            <ComparisonBar>\n              <ComparisonFill width={currentWpmWidth} isCurrentRun={true} />\n            </ComparisonBar>\n            <ComparisonValue>\n              {wpm}\n              {isNewBest && <ImprovementLabel isImprovement={true}>+{improvementPercent}%</ImprovementLabel>}\n            </ComparisonValue>\n          </ComparisonRow>\n          <ComparisonRow>\n            <ComparisonLabel>Previous Best</ComparisonLabel>\n            <ComparisonBar>\n              <ComparisonFill width={previousWpmWidth} isCurrentRun={false} />\n            </ComparisonBar>\n            <ComparisonValue>{previousBestWpm}</ComparisonValue>\n          </ComparisonRow>\n        </ComparisonContainer>\n      )}\n      \n      <StatsGrid>\n        <StatCard>\n          <StatIcon>⚡</StatIcon>\n          <StatLabel>Words Per Minute</StatLabel>\n          <StatValue>{wpm}</StatValue>\n          <StatLabel>{getWpmEvaluation()}</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatIcon>🎯</StatIcon>\n          <StatLabel>Accuracy</StatLabel>\n          <StatValue>{accuracy}%</StatValue>\n          <StatLabel>{getAccuracyEvaluation()}</StatLabel>\n        </StatCard>\n        <StatCard>\n          <StatIcon>📝</StatIcon>\n          <StatLabel>Words Typed</StatLabel>\n          <StatValue>{wordsTyped}</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatIcon>✓</StatIcon>\n          <StatLabel>Correct Characters</StatLabel>\n          <StatValue>{correctChars}</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatIcon>✗</StatIcon>\n          <StatLabel>Incorrect Characters</StatLabel>\n          <StatValue>{incorrectChars}</StatValue>\n        </StatCard>\n        <StatCard>\n          <StatIcon>🔤</StatIcon>\n          <StatLabel>Total Characters</StatLabel>\n          <StatValue>{correctChars + incorrectChars}</StatValue>\n        </StatCard>\n      </StatsGrid>\n      \n      <PlayAgainButton onClick={onPlayAgain}>\n        Race Again\n      </PlayAgainButton>\n    </ResultsContainer>\n  );\n};\n\nexport default Results; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}