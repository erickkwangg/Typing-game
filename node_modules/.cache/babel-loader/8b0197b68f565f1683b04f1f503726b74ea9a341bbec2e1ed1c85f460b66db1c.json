{"ast":null,"code":"var _jsxFileName = \"/Users/ericwang/Theseus/typing-racer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport TypingGame from './components/TypingGame';\nimport GameSettings from './components/GameSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [difficulty, setDifficulty] = useState('easy');\n  const [targetWordCount, setTargetWordCount] = useState(100);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Determine target word count based on difficulty\n  const getTargetWordCount = difficulty => {\n    switch (difficulty) {\n      case 'easy':\n        return 100;\n      case 'medium':\n        return 150;\n      case 'hard':\n        return 200;\n      default:\n        return 100;\n    }\n  };\n\n  // Handle difficulty change\n  const handleDifficultyChange = newDifficulty => {\n    setDifficulty(newDifficulty);\n    setTargetWordCount(getTargetWordCount(newDifficulty));\n  };\n\n  // Handle game completion\n  const handleGameComplete = stats => {\n    console.log('Game complete with stats:', stats);\n    // You could save high scores or show additional UI here\n  };\n\n  // Start a new game\n  const startGame = () => {\n    setGameStarted(true);\n  };\n\n  // Return to settings\n  const returnToSettings = () => {\n    setGameStarted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFCE\\uFE0F Typing Racer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Test your typing speed and race to the finish line!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: !gameStarted ? /*#__PURE__*/_jsxDEV(GameSettings, {\n        difficulty: difficulty,\n        onDifficultyChange: handleDifficultyChange,\n        onStartGame: startGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: returnToSettings,\n          children: \"\\u2190 Back to Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TypingGame, {\n          difficulty: difficulty,\n          targetWordCount: targetWordCount,\n          onGameComplete: handleGameComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Practice makes perfect! The more you type, the faster you'll get.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JV60Ce9lGJVlTo7lPw/Lj2x5kKM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TypingGame","GameSettings","jsxDEV","_jsxDEV","App","_s","difficulty","setDifficulty","targetWordCount","setTargetWordCount","gameStarted","setGameStarted","getTargetWordCount","handleDifficultyChange","newDifficulty","handleGameComplete","stats","console","log","startGame","returnToSettings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDifficultyChange","onStartGame","onClick","onGameComplete","_c","$RefreshReg$"],"sources":["/Users/ericwang/Theseus/typing-racer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport TypingGame from './components/TypingGame';\nimport GameSettings from './components/GameSettings';\n\nconst App: React.FC = () => {\n  const [difficulty, setDifficulty] = useState<string>('easy');\n  const [targetWordCount, setTargetWordCount] = useState<number>(100);\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n\n  // Determine target word count based on difficulty\n  const getTargetWordCount = (difficulty: string): number => {\n    switch (difficulty) {\n      case 'easy':\n        return 100;\n      case 'medium':\n        return 150;\n      case 'hard':\n        return 200;\n      default:\n        return 100;\n    }\n  };\n\n  // Handle difficulty change\n  const handleDifficultyChange = (newDifficulty: string) => {\n    setDifficulty(newDifficulty);\n    setTargetWordCount(getTargetWordCount(newDifficulty));\n  };\n\n  // Handle game completion\n  const handleGameComplete = (stats: { wpm: number; accuracy: number }) => {\n    console.log('Game complete with stats:', stats);\n    // You could save high scores or show additional UI here\n  };\n\n  // Start a new game\n  const startGame = () => {\n    setGameStarted(true);\n  };\n\n  // Return to settings\n  const returnToSettings = () => {\n    setGameStarted(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>üèéÔ∏è Typing Racer</h1>\n        <p>Test your typing speed and race to the finish line!</p>\n      </header>\n\n      <main className=\"App-main\">\n        {!gameStarted ? (\n          <GameSettings \n            difficulty={difficulty} \n            onDifficultyChange={handleDifficultyChange}\n            onStartGame={startGame}\n          />\n        ) : (\n          <div className=\"game-container\">\n            <button className=\"back-button\" onClick={returnToSettings}>\n              ‚Üê Back to Settings\n            </button>\n            \n            <TypingGame\n              difficulty={difficulty}\n              targetWordCount={targetWordCount}\n              onGameComplete={handleGameComplete}\n            />\n          </div>\n        )}\n      </main>\n\n      <footer className=\"App-footer\">\n        <p>Practice makes perfect! The more you type, the faster you'll get.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}