{"ast":null,"code":"var _jsxFileName = \"/Users/ericwang/Theseus/typing-racer/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport GameSettings from './components/GameSettings';\nimport TypingGame from './components/TypingGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Roboto', sans-serif;\n`;\n_c = AppContainer;\nconst Footer = styled.footer`\n  margin-top: 40px;\n  text-align: center;\n  color: #666;\n  font-size: 0.8rem;\n`;\n_c2 = Footer;\nfunction App() {\n  _s();\n  const [difficulty, setDifficulty] = useState('medium');\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Start a new game\n  const startGame = useCallback(() => {\n    setGameStarted(true);\n  }, []);\n\n  // End current game and return to settings\n  const endGame = useCallback(() => {\n    setGameStarted(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(GameSettings, {\n      difficulty: difficulty,\n      onDifficultyChange: setDifficulty,\n      onStartGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TypingGame, {\n      text: \"\" // We're passing an empty string since TypingGame selects its own text\n      ,\n      difficulty: difficulty,\n      onEndGame: endGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: [\"\\xA9 \", new Date().getFullYear(), \" Typing Racer | Race to improve your typing speed!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p0Pt7OjnwzNBN8Z9nXMl45nBQvw=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","styled","Header","GameSettings","TypingGame","jsxDEV","_jsxDEV","AppContainer","div","_c","Footer","footer","_c2","App","_s","difficulty","setDifficulty","gameStarted","setGameStarted","startGame","endGame","children","fileName","_jsxFileName","lineNumber","columnNumber","onDifficultyChange","onStartGame","text","onEndGame","Date","getFullYear","_c3","$RefreshReg$"],"sources":["/Users/ericwang/Theseus/typing-racer/src/App.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport GameSettings from './components/GameSettings';\nimport TypingGame from './components/TypingGame';\n\nexport type Difficulty = 'easy' | 'medium' | 'hard';\n\nconst AppContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Roboto', sans-serif;\n`;\n\nconst Footer = styled.footer`\n  margin-top: 40px;\n  text-align: center;\n  color: #666;\n  font-size: 0.8rem;\n`;\n\nfunction App() {\n  const [difficulty, setDifficulty] = useState<Difficulty>('medium');\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n\n  // Start a new game\n  const startGame = useCallback(() => {\n    setGameStarted(true);\n  }, []);\n\n  // End current game and return to settings\n  const endGame = useCallback(() => {\n    setGameStarted(false);\n  }, []);\n\n  return (\n    <AppContainer>\n      <Header />\n      \n      {!gameStarted ? (\n        <GameSettings \n          difficulty={difficulty}\n          onDifficultyChange={setDifficulty}\n          onStartGame={startGame}\n        />\n      ) : (\n        <TypingGame \n          text=\"\" // We're passing an empty string since TypingGame selects its own text\n          difficulty={difficulty}\n          onEndGame={endGame}\n        />\n      )}\n      \n      <Footer>\n        Â© {new Date().getFullYear()} Typing Racer | Race to improve your typing speed!\n      </Footer>\n    </AppContainer>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjD,MAAMC,YAAY,GAAGN,MAAM,CAACO,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,YAAY;AAOlB,MAAMG,MAAM,GAAGT,MAAM,CAACU,MAAM;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,MAAM;AAOZ,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAa,QAAQ,CAAC;EAClE,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAU,KAAK,CAAC;;EAE9D;EACA,MAAMoB,SAAS,GAAGnB,WAAW,CAAC,MAAM;IAClCkB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,OAAO,GAAGpB,WAAW,CAAC,MAAM;IAChCkB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,YAAY;IAAAc,QAAA,gBACXf,OAAA,CAACJ,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAET,CAACR,WAAW,gBACXX,OAAA,CAACH,YAAY;MACXY,UAAU,EAAEA,UAAW;MACvBW,kBAAkB,EAAEV,aAAc;MAClCW,WAAW,EAAER;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,gBAEFnB,OAAA,CAACF,UAAU;MACTwB,IAAI,EAAC,EAAE,CAAC;MAAA;MACRb,UAAU,EAAEA,UAAW;MACvBc,SAAS,EAAET;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACF,eAEDnB,OAAA,CAACI,MAAM;MAAAW,QAAA,GAAC,OACJ,EAAC,IAAIS,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAC,oDAC9B;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB;AAACX,EAAA,CArCQD,GAAG;AAAAmB,GAAA,GAAHnB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}